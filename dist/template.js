import '../js/handlebars-v4.0.5.js';

class Template {
    constructor() {
        let template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
      this.template = templates['template.html'] = template({"1":function(container,depth0,helpers,partials,data) {
          let stack1;

        return ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},depth0,{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
      },"2":function(container,depth0,helpers,partials,data) {
          let stack1;

        return "                                                        "
          + ((stack1 = container.lambda((depth0 != null ? depth0.outerHTML : depth0), depth0)) != null ? stack1 : "")
          + "\r\n";
      },"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
          let stack1;

        return "<div>    <!-- TOTALS -->\r\n    <nav class=\"navbar navbar-default navbar-fixed-top\">\r\n    </nav>\r\n    <!-- /TOTALS -->\r\n\r\n    <div id=\"wrapper\">\r\n\r\n        <div id=\"page-wrapper\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                    <h1 class=\"page-header\">The BernDown - 2,392 Delegates required to win</h1>\r\n                </div>\r\n                <!-- /.col-lg-12 -->\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\">\r\n                    <!-- /.panel -->\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\">\r\n                            <i class=\"fa fa-bar-chart-o fa-fw\"></i> Projected Vote\r\n                        </div>\r\n                        <!-- /.panel-heading -->\r\n                        <div class=\"panel-body\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <div class=\"table-responsive\">\r\n                                        <table class=\"table table-bordered table-hover table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th rowspan=\"2\">Date</th>\r\n                                                    <th rowspan=\"2\">State</th>\r\n                                                    <th rowspan=\"2\">Winner</th>\r\n                                                    <th colspan=\"2\" class=\"clinton\">Clinton</th>\r\n                                                    <th rowspan=\"2\">Margin</th>\r\n                                                    <th colspan=\"2\" class=\"sanders\">Sanders</th>\r\n                                                    <th rowspan=\"1\" colspan=\"3\"><i class=\"fa fa-floppy-o\" data-toggle=\"popover\" data-trigger=\"hover\" data-placement=\"left\" data-content=\"Save your projections so you can share the url\"></i><i class=\"fa fa-toggle-off\" data-toggle=\"popover\" data-trigger=\"hover\" data-placement=\"left\" data-content=\"Hide already awarded states.\"></i> Delegates <i class=\"fa fa-refresh\" data-toggle=\"popover\" data-trigger=\"hover\" data-placement=\"left\" data-content=\"Reset to original counts\"></i><i class=\"fa fa-fast-forward\" data-toggle=\"popover\" data-trigger=\"hover\" data-placement=\"left\" data-content=\"Project remaining with half the delegates awarded to each candidate\"></i></th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th class=\"clinton\">Votes</th>\r\n                                                    <th class=\"clinton\">%</th>\r\n                                                    <th class=\"sanders\">%</th>\r\n                                                    <th class=\"sanders\">Votes</th>\r\n                                                    <th class=\"clinton\">Clinton</th>\r\n                                                    <th class=\"sanders\">Sanders</th>\r\n                                                    <th>Total</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n"
          + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.upcoming : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
          + "                                            </tbody>\r\n                                            <tfoot>\r\n                                            </tfoot>\r\n                                        </table>\r\n                                    </div>\r\n                                    <!-- /.table-responsive -->\r\n                                </div>\r\n                            </div>\r\n                            <!-- /.row -->\r\n                        </div>\r\n                        <!-- /.panel-body -->\r\n                    </div>\r\n                    <!-- /.panel -->\r\n                </div>\r\n                <!-- /.col-lg-8 -->\r\n            </div>\r\n            <!-- /.row -->\r\n        </div>\r\n        <!-- /#page-wrapper -->\r\n\r\n    </div>\r\n    <!-- /#wrapper --></div>";
      },"useData":true});
    }
}

export const template = new Template().template;